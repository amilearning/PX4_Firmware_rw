

# serial autostart script generated with generate_serial_config.py


set PRT_F /etc/init.d/rc.serial_port

set PRT GPS_2_CONFIG
# get the device & baudrate
sh $PRT_F
if [ $SERIAL_DEV != none ]; then
echo "Starting Secondary GPS on $SERIAL_DEV"
set DUAL_GPS_ARGS "-e ${SERIAL_DEV} -g p:${BAUD_PARAM}"
fi

set PRT GPS_1_CONFIG
# get the device & baudrate
sh $PRT_F
if [ $SERIAL_DEV != none ]; then
echo "Starting Main GPS on $SERIAL_DEV"
gps start -d ${SERIAL_DEV} -b p:${BAUD_PARAM} ${DUAL_GPS_ARGS}
fi

set PRT MAV_0_CONFIG
set i 0
# get the device & baudrate
sh $PRT_F
if [ $SERIAL_DEV != none ]; then
echo "Starting MAVLink on $SERIAL_DEV"
set MAV_ARGS "-b p:${BAUD_PARAM} -m p:MAV_${i}_MODE -r p:MAV_${i}_RATE"
if param compare MAV_${i}_FORWARD 1
then
    set MAV_ARGS "${MAV_ARGS} -f"
fi
mavlink start -d ${SERIAL_DEV} ${MAV_ARGS} -x

fi

set PRT MAV_1_CONFIG
set i 1
# get the device & baudrate
sh $PRT_F
if [ $SERIAL_DEV != none ]; then
echo "Starting MAVLink on $SERIAL_DEV"
set MAV_ARGS "-b p:${BAUD_PARAM} -m p:MAV_${i}_MODE -r p:MAV_${i}_RATE"
if param compare MAV_${i}_FORWARD 1
then
    set MAV_ARGS "${MAV_ARGS} -f"
fi
mavlink start -d ${SERIAL_DEV} ${MAV_ARGS} -x

fi

set PRT MAV_2_CONFIG
set i 2
# get the device & baudrate
sh $PRT_F
if [ $SERIAL_DEV != none ]; then
echo "Starting MAVLink on $SERIAL_DEV"
set MAV_ARGS "-b p:${BAUD_PARAM} -m p:MAV_${i}_MODE -r p:MAV_${i}_RATE"
if param compare MAV_${i}_FORWARD 1
then
    set MAV_ARGS "${MAV_ARGS} -f"
fi
mavlink start -d ${SERIAL_DEV} ${MAV_ARGS} -x

fi



unset PRT_GPS1_
unset PRT_TEL1_
unset PRT_TEL2_
unset PRT_TEL4_

unset i
unset SERIAL_DEV
unset PRT
unset PRT_F
unset BAUD_PARAM
unset MAV_ARGS
